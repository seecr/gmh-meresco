## begin license ##
#
# Gemeenschappelijke Metadata Harvester (GMH) data extractie en OAI service
#
# Copyright (C) 2025 Koninklijke Bibliotheek (KB) https://www.kb.nl
# Copyright (C) 2025 Seecr (Seek You Too B.V.) https://seecr.nl
#
# This file is part of "GMH-Meresco"
#
# "GMH-Meresco" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "GMH-Meresco" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "GMH-Meresco"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

default_css = [
    {
        "href": "https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css",
        "integrity": "sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr",
    },
]

default_js = [
    {
        "src": "https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js",
        "integrity": "sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q",
    }
]

# <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous">
# <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js" integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q" crossorigin="anonymous"></script>


def header(tag, title, additionalStylesheets=None, **kwargs):
    yield """<!doctype html>
<html lang="nl">"""
    with tag("head"):
        with tag("meta", charset="utf-8"):
            pass
        with tag(
            "meta",
            name="viewport",
            content="width=device-width, initial-scale=1, shrink-to-fit=no",
        ):
            pass
        stylesheets = default_css + (additionalStylesheets or [])
        for sheet in stylesheets:
            tag_kw = {"href": sheet}
            if isinstance(sheet, dict):
                tag_kw["href"] = sheet["href"]
                integrity = sheet.get("integrity")
                if integrity:
                    tag_kw["integrity"] = "integrity"

            with tag(
                "link",
                rel="stylesheet",
                type_="text/css",
                crossorigin="anonymous",
                **tag_kw
            ):
                pass
        with tag("title"):
            yield title
    yield "<body>"
    with tag(
        "nav", class_=["navbar", "navbar-expand-lg", "navbar-light", "bg-white", "mb-1"]
    ):
        with tag("a", class_=["navbar-brand", "iconfont"], href="/doc"):
            with tag("img", style="height: 35px;", src="/static/images/kb-logo.png"):
                pass
            with tag("span.ms-2"):
                yield "GMH Documentatie"
        with tag("div", class_=["navbar-collapse"]):
            with tag("ul", class_=["navbar-nav", "mr-auto", "navbar-right"]):
                for link, label in [("/doc", "Home")]:
                    with tag("li", class_=["nav-item"]):
                        with tag("a", class_=["nav-link"], href=link):
                            yield label


def footer(additionalScript=None, jsScripts=None, **kwargs):
    tag = kwargs["tag"]
    for script in default_js:
        with tag("script", type_="text/javascript", crossorigin="anonymous", **script):
            pass
    for script in jsScripts or []:
        with tag("script", type_="text/javascript", src=script):
            pass
    if additionalScript:
        with tag("script", type_="text/javascript"):
            yield tag.as_is(additionalScript)
    yield """</body>
</html>"""


def page(contents, **kwargs):
    yield header(**kwargs)
    yield contents(**kwargs)
    yield footer(**kwargs)
