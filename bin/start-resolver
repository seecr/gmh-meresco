#!/usr/bin/env python
# -*- coding: utf-8 -*-
## begin license ##
#
# Gemeenschappelijke Metadata Harvester (GMH) data extractie en OAI service
#
# Copyright (C) 2015 Drents Archief http://www.drentsarchief.nl
# Copyright (C) 2015-2016, 2025 Seecr (Seek You Too B.V.) https://seecr.nl
# Copyright (C) 2025 Koninklijke Bibliotheek (KB) https://www.kb.nl
#
# This file is part of "GMH-Meresco"
#
# "GMH-Meresco" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "GMH-Meresco" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "GMH-Meresco"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

from seecrdeps import includeParentAndDeps  # DO_NOT_DISTRIBUTE

includeParentAndDeps(__file__)  # DO_NOT_DISTRIBUTE

import argparse
import pathlib
from seecr.utils import isRootUser

if __name__ == "__main__":
    if isRootUser():
        print("Do not run as root user!")
        exit(2)

    parser = argparse.ArgumentParser()
    parser.add_argument(
        "-p", "--port", type=int, help="Default port number", required=True
    )
    parser.add_argument(
        "--stateDir", type=pathlib.Path, help="Directory to write state.", required=True
    )
    parser.add_argument(
        "--gatewayPort",
        type=int,
        help="Portnumber of gateway server.",
        required=True,
    )
    parser.add_argument(
        "--quickCommit", default=False, action="store_true", help="For integrationtests"
    )
    parser.add_argument(
        "--globalConfig", help="Global config file", type=pathlib.Path, required=True
    )
    parser.add_argument(
        "--dbConfig",
        help="SQL database connection config file location.",
        required=True,
    )
    args = parser.parse_args()

    from meresco.servers.resolver.resolverserver import startServer

    startServer(**vars(args))
